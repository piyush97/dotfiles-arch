#!/usr/bin/env bash
# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝ 
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗ 
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
# Terminal multiplexer - macOS inspired config

# =====================================
# GENERAL SETTINGS
# =====================================

# Set prefix to Ctrl-a (like screen, easier than Ctrl-b)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Enable true colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Increase scrollback buffer size
set -g history-limit 50000

# Tmux messages display time
set -g display-time 4000

# Refresh status more often
set -g status-interval 5

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor
setw -g aggressive-resize on

# Enable mouse support
set -g mouse on

# Don't exit copy mode when dragging with mouse
unbind -T copy-mode-vi MouseDragEnd1Pane

# Remove delay for exiting insert mode with ESC in Neovim
set -sg escape-time 10

# =====================================
# KEY BINDINGS - macOS Style
# =====================================

# Reload config file (Prefix + r)
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

# Split panes using | and - (more intuitive)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# macOS-like pane navigation (Alt + Arrow keys)
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Vim-style pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing with Prefix + H,J,K,L
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Pane resizing with Alt + Shift + Arrow
bind -n M-S-Left resize-pane -L 5
bind -n M-S-Right resize-pane -R 5
bind -n M-S-Up resize-pane -U 5
bind -n M-S-Down resize-pane -D 5

# Window navigation (Shift + Arrow)
bind -n S-Left previous-window
bind -n S-Right next-window

# Window reordering (Ctrl + Shift + Arrow)
bind -n C-S-Left swap-window -t -1\; select-window -t -1
bind -n C-S-Right swap-window -t +1\; select-window -t +1

# Quick window selection (Alt + Number)
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Create new window with current path
bind c new-window -c "#{pane_current_path}"

# Kill pane/window shortcuts
bind x kill-pane
bind X kill-window
bind q confirm-before -p "Kill session #S? (y/n)" kill-session

# =====================================
# COPY MODE - Vi Style with macOS clipboard
# =====================================

# Use Vi mode
setw -g mode-keys vi

# Enter copy mode with Prefix + [
bind [ copy-mode

# macOS-like copy mode bindings
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send-keys -X cancel

# Copy to system clipboard (requires xclip on Linux)
if-shell "uname | grep -q Darwin" {
  bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
  bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
  bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
}

if-shell "uname | grep -q Linux" {
  bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
  bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
  bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
}

# =====================================
# STATUS BAR
# =====================================

# Status bar position
set -g status-position bottom

# Status bar style
set -g status-style 'bg=#1a1b26 fg=#a9b1d6'

# Status bar left side
set -g status-left-length 30
set -g status-left '#[fg=#7aa2f7,bold]  #S #[fg=#a9b1d6]│ '

# Status bar right side
set -g status-right-length 60
set -g status-right '#[fg=#a9b1d6]│ #[fg=#7aa2f7]󰥔 %H:%M #[fg=#a9b1d6]│ #[fg=#7aa2f7] %d %b %Y '

# Window status
set -g window-status-current-style 'fg=#7aa2f7 bg=#3b4261 bold'
set -g window-status-current-format ' #I:#W#F '

set -g window-status-style 'fg=#a9b1d6 bg=#1a1b26'
set -g window-status-format ' #I:#W#F '

# Pane borders
set -g pane-border-style 'fg=#3b4261'
set -g pane-active-border-style 'fg=#7aa2f7'

# Message style
set -g message-style 'fg=#7aa2f7 bg=#3b4261 bold'

# =====================================
# PLUGINS (using TPM)
# =====================================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-pain-control'

# Plugin settings
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'

# Auto install TPM if not installed
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.config/tmux/plugins/tpm/tpm'